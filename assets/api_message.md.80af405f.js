import{_ as e,c as s,o as t,a}from"./app.bec4a1f1.js";const u=JSON.parse('{"title":"alicebot.message","description":"","frontmatter":{},"headers":[{"level":2,"title":"class Message(self, message = None, args, *kwargs) {#Message}","slug":"Message"},{"level":3,"title":"method copy(self) {#Message.copy}","slug":"Message.copy"},{"level":3,"title":"method deepcopy(self) {#Message.deepcopy}","slug":"Message.deepcopy"},{"level":3,"title":"method endswith(self, suffix, start=None, end=None) {#Message.endswith}","slug":"Message.endswith"},{"level":3,"title":"method get_plain_text(self) {#Message.getplaintext}","slug":"Message.get_plain_text"},{"level":3,"title":"method is_text(self) {#Message.is_text}","slug":"Message.is_text"},{"level":3,"title":"method replace(self, old, new, count = -1) {#Message.replace}","slug":"Message.replace"},{"level":3,"title":"method startswith(self, prefix, start=None, end=None) {#Message.startswith}","slug":"Message.startswith"},{"level":2,"title":"class MessageSegment(self, type, data = <factory<) {#MessageSegment}","slug":"MessageSegment"},{"level":3,"title":"method as_dict(self) {#MessageSegment.as_dict}","slug":"MessageSegment.as_dict"},{"level":3,"title":"method copy(self) {#MessageSegment.copy}","slug":"MessageSegment.copy"},{"level":3,"title":"method deepcopy(self) {#MessageSegment.deepcopy}","slug":"MessageSegment.deepcopy"},{"level":3,"title":"method get(self, key, default=None) {#MessageSegment.get}","slug":"MessageSegment.get"},{"level":3,"title":"method is_text(self) {#MessageSegment.is_text}","slug":"MessageSegment.is_text"},{"level":3,"title":"method items(self) {#MessageSegment.items}","slug":"MessageSegment.items"},{"level":3,"title":"method keys(self) {#MessageSegment.keys}","slug":"MessageSegment.keys"},{"level":3,"title":"method values(self) {#MessageSegment.values}","slug":"MessageSegment.values"}],"relativePath":"api/message.md","lastUpdated":null}'),o={name:"api/message.md"},l=a('<h1 id="alicebot-message" tabindex="-1">alicebot.message <a class="header-anchor" href="#alicebot-message" aria-hidden="true">#</a></h1><p>AliceBot \u6D88\u606F\u3002</p><p>\u5B9E\u73B0\u4E86\u5E38\u7528\u7684\u57FA\u672C\u6D88\u606F <code>Message</code> \u548C\u6D88\u606F\u5B57\u6BB5 <code>MessageSegment</code> \u6A21\u578B\u4F9B\u9002\u914D\u5668\u4F7F\u7528\u3002 \u9002\u914D\u5668\u5F00\u53D1\u8005\u53EF\u4EE5\u6839\u636E\u9700\u8981\u5B9E\u73B0\u6B64\u6A21\u5757\u4E2D\u6D88\u606F\u7C7B\u7684\u5B50\u7C7B\u6216\u5B9A\u4E49\u4E0E\u6B64\u4E0D\u540C\u7684\u6D88\u606F\u7C7B\u578B\uFF0C\u4F46\u5EFA\u8BAE\u82E5\u53EF\u884C\u7684\u8BDD\u5E94\u5C3D\u91CF\u4F7F\u7528\u6B64\u6A21\u5757\u4E2D\u6D88\u606F\u7C7B\u7684\u5B50\u7C7B\u3002</p><h2 id="Message" tabindex="-1"><em>class</em> <code>Message</code>(self, message = None, *args, **kwargs) <a class="header-anchor" href="#Message" aria-hidden="true">#</a></h2><p>Bases: <code>list</code>, <code>\\&lt;class &#39;Generic&#39;\\&lt;</code></p><p>\u6D88\u606F\u3002</p><p>\u672C\u7C7B\u662F <code>List</code> \u7684\u5B50\u7C7B\uFF0C\u5E76\u91CD\u5199\u4E86 <code>__init__()</code> \u65B9\u6CD5\uFF0C \u53EF\u4EE5\u76F4\u63A5\u5904\u7406 str, Mapping, Iterable[Mapping], T_MessageSegment, T_Message\u3002 \u5176\u4E2D str \u7684\u652F\u6301\u9700\u8981\u9002\u914D\u5668\u5F00\u53D1\u8005\u91CD\u5199 <code>_str_to_message_segment()</code> \u65B9\u6CD5\u5B9E\u73B0\u3002 \u672C\u7C7B\u91CD\u5199\u4E86 <code>+</code> \u548C <code>+=</code> \u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u76F4\u63A5\u548C Message, MessageSegment \u7B49\u7C7B\u578B\u7684\u5BF9\u8C61\u6267\u884C\u53D6\u548C\u8FD0\u7B97\u3002 \u82E5\u5F00\u53D1\u8005\u5B9E\u73B0\u4E86 MessageSegment \u7684\u5B50\u7C7B\u5219\u9700\u8981\u91CD\u5199 <code>_message_segment_class()</code> \u65B9\u6CD5\uFF0C \u5E76\u5728 MessageSegment \u7684\u5B50\u7C7B\u4E2D\u91CD\u5199 <code>_message_class()</code> \u65B9\u6CD5\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><strong>message</strong> (<em>Union[NoneType, ~T_Message, ~T_MessageSegment, str, Mapping, Iterable[Union[~T_MessageSegment, str, Mapping]]]</em>)</li></ul></li></ul><h3 id="Message.copy" tabindex="-1"><em>method</em> <code>copy(self)</code> <a class="header-anchor" href="#Message.copy" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u81EA\u8EAB\u7684\u6D45\u590D\u5236\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>~T_Message</em></p><p>\u81EA\u8EAB\u7684\u6D45\u590D\u5236\u3002</p></li></ul><h3 id="Message.deepcopy" tabindex="-1"><em>method</em> <code>deepcopy(self)</code> <a class="header-anchor" href="#Message.deepcopy" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u81EA\u8EAB\u7684\u6DF1\u590D\u5236\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>~T_Message</em></p><p>\u81EA\u8EAB\u7684\u6DF1\u590D\u5236\u3002</p></li></ul><h3 id="Message.endswith" tabindex="-1"><em>method</em> <code>endswith(self, suffix, start=None, end=None)</code> <a class="header-anchor" href="#Message.endswith" aria-hidden="true">#</a></h3><p>\u5B9E\u73B0\u7C7B\u4F3C\u5B57\u7B26\u4E32\u7684 <code>endswith()</code> \u65B9\u6CD5\u3002</p><p>\u5F53 <code>suffix</code> \u7C7B\u578B\u662F str \u65F6\uFF0C\u4F1A\u5C06\u81EA\u8EAB\u8F6C\u6362\u4E3A str \u7C7B\u578B\uFF0C\u518D\u8C03\u7528 str \u7C7B\u578B\u7684 <code>endswith()</code> \u65B9\u6CD5\u3002 \u5F53 <code>suffix</code> \u7C7B\u578B\u662F T_MessageSegment \u65F6\uFF0C<code>start</code> \u548C <code>end</code> \u53C2\u6570\u5C06\u4E0D\u5176\u4F5C\u7528\uFF0C \u4F1A\u5224\u65AD\u5217\u8868\u7684\u6700\u540E\u4E00\u4E2A\u6D88\u606F\u5B57\u6BB5\u662F\u5426\u548C <code>suffix</code> \u76F8\u7B49\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>suffix</strong> (<em>Union[str, ~T_MessageSegment]</em>) - \u540E\u7F00\u3002</p></li><li><p><strong>start</strong> - \u5F00\u59CB\u68C0\u67E5\u4F4D\u7F6E\u3002</p></li><li><p><strong>end</strong> - \u505C\u6B62\u68C0\u67E5\u4F4D\u7F6E\u3002</p></li></ul></li><li><p><strong>Returns</strong></p><p>Type: <em>bool</em></p><p>\u68C0\u67E5\u7ED3\u679C\u3002</p></li></ul><h3 id="Message.get_plain_text" tabindex="-1"><em>method</em> <code>get_plain_text(self)</code> <a class="header-anchor" href="#Message.get_plain_text" aria-hidden="true">#</a></h3><p>\u83B7\u53D6\u6D88\u606F\u4E2D\u7684\u7EAF\u6587\u672C\u90E8\u5206\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>str</em></p><p>\u6D88\u606F\u4E2D\u7684\u7EAF\u6587\u672C\u90E8\u5206\u3002</p></li></ul><h3 id="Message.is_text" tabindex="-1"><em>method</em> <code>is_text(self)</code> <a class="header-anchor" href="#Message.is_text" aria-hidden="true">#</a></h3><ul><li><p><strong>Returns</strong></p><p>Type: <em>bool</em></p></li></ul><h3 id="Message.replace" tabindex="-1"><em>method</em> <code>replace(self, old, new, count = -1)</code> <a class="header-anchor" href="#Message.replace" aria-hidden="true">#</a></h3><p>\u5B9E\u73B0\u7C7B\u4F3C\u5B57\u7B26\u4E32\u7684 <code>replace()</code> \u65B9\u6CD5\u3002</p><p>\u5F53 <code>old</code> \u4E3A str \u7C7B\u578B\u65F6\uFF0C<code>new</code> \u4E5F\u5FC5\u987B\u662F str \uFF0C\u672C\u65B9\u6CD5\u5C06\u4EC5\u5BF9 <code>is_text()</code> \u4E3A True \u7684\u6D88\u606F\u5B57\u6BB5\u8FDB\u884C\u5904\u7406\u3002 \u5F53 <code>old</code> \u4E3A MessageSegment \u7C7B\u578B\u65F6\uFF0C<code>new</code> \u53EF\u4EE5\u662F MessageSegment \u6216 None\uFF0C\u672C\u65B9\u6CD5\u5C06\u5BF9\u6240\u6709\u6D88\u606F\u5B57\u6BB5\u8FDB\u884C\u5904\u7406\uFF0C \u5E76\u66FF\u6362\u7B26\u5408\u6761\u4EF6\u7684\u6D88\u606F\u5B57\u6BB5\u3002None \u8868\u793A\u5220\u9664\u5339\u914D\u5230\u7684\u6D88\u606F\u5B57\u6BB5\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>old</strong> (<em>Union[str, ~T_MessageSegment]</em>) - \u88AB\u5339\u914D\u7684\u5B57\u7B26\u4E32\u6216\u6D88\u606F\u5B57\u6BB5\u3002</p></li><li><p><strong>new</strong> (<em>Union[str, ~T_MessageSegment, NoneType]</em>) - \u88AB\u66FF\u6362\u4E3A\u7684\u5B57\u7B26\u4E32\u6216\u6D88\u606F\u5B57\u6BB5\u3002</p></li><li><p><strong>count</strong> (<em>int</em>) - \u66FF\u6362\u7684\u6B21\u6570\u3002</p></li></ul></li><li><p><strong>Returns</strong></p><p>Type: <em>~T_Message</em></p><p>\u66FF\u6362\u540E\u7684\u6D88\u606F\u5BF9\u8C61\u3002</p></li></ul><h3 id="Message.startswith" tabindex="-1"><em>method</em> <code>startswith(self, prefix, start=None, end=None)</code> <a class="header-anchor" href="#Message.startswith" aria-hidden="true">#</a></h3><p>\u5B9E\u73B0\u7C7B\u4F3C\u5B57\u7B26\u4E32\u7684 <code>startswith()</code> \u65B9\u6CD5\u3002</p><p>\u5F53 <code>prefix</code> \u7C7B\u578B\u662F str \u65F6\uFF0C\u4F1A\u5C06\u81EA\u8EAB\u8F6C\u6362\u4E3A str \u7C7B\u578B\uFF0C\u518D\u8C03\u7528 str \u7C7B\u578B\u7684 <code>startswith()</code> \u65B9\u6CD5\u3002 \u5F53 <code>prefix</code> \u7C7B\u578B\u662F T_MessageSegment \u65F6\uFF0C<code>start</code> \u548C <code>end</code> \u53C2\u6570\u5C06\u4E0D\u5176\u4F5C\u7528\uFF0C \u4F1A\u5224\u65AD\u5217\u8868\u7684\u7B2C\u4E00\u4E2A\u6D88\u606F\u5B57\u6BB5\u662F\u5426\u548C <code>prefix</code> \u76F8\u7B49\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>prefix</strong> (<em>Union[str, ~T_MessageSegment]</em>) - \u524D\u7F00\u3002</p></li><li><p><strong>start</strong> - \u5F00\u59CB\u68C0\u67E5\u4F4D\u7F6E\u3002</p></li><li><p><strong>end</strong> - \u505C\u6B62\u68C0\u67E5\u4F4D\u7F6E\u3002</p></li></ul></li><li><p><strong>Returns</strong></p><p>Type: <em>bool</em></p><p>\u68C0\u67E5\u7ED3\u679C\u3002</p></li></ul><h2 id="MessageSegment" tabindex="-1"><em>class</em> <code>MessageSegment</code>(self, type, data = &lt;factory&lt;) <a class="header-anchor" href="#MessageSegment" aria-hidden="true">#</a></h2><p>Bases: <code>collections.abc.Mapping</code>, <code>\\&lt;class &#39;Generic&#39;\\&lt;</code></p><p>\u6D88\u606F\u5B57\u6BB5\u3002</p><p>\u672C\u7C7B\u5B9E\u73B0\u4E86\u6240\u6709\u6620\u5C04\u7C7B\u578B\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u5168\u90E8\u662F\u5BF9 <code>data</code> \u5C5E\u6027\u7684\u64CD\u4F5C\u3002 \u672C\u7C7B\u91CD\u5199\u4E86 <code>+</code> \u548C <code>+=</code> \u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u76F4\u63A5\u548C Message, MessageSegment \u7B49\u7C7B\u578B\u7684\u5BF9\u8C61\u6267\u884C\u53D6\u548C\u8FD0\u7B97\uFF0C\u8FD4\u56DE Message \u5BF9\u8C61\u3002 \u82E5\u5F00\u53D1\u8005\u5B9E\u73B0\u4E86 Message \u548C MessageSegment \u7684\u5B50\u7C7B\u5219\u9700\u8981\u91CD\u5199 <code>_message_class()</code> \u65B9\u6CD5\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>type</strong> (<em>str</em>)</p></li><li><p><strong>data</strong> (<em>Dict[str, Any]</em>)</p></li></ul></li><li><p><strong>Attributes</strong></p><ul><li><p><strong>type</strong> (<em>str</em>) - \u6D88\u606F\u5B57\u6BB5\u7C7B\u578B\u3002</p></li><li><p><strong>data</strong> (<em>Dict[str, Any]</em>) - \u6D88\u606F\u5B57\u6BB5\u5185\u5BB9\u3002</p></li></ul></li></ul><h3 id="MessageSegment.as_dict" tabindex="-1"><em>method</em> <code>as_dict(self)</code> <a class="header-anchor" href="#MessageSegment.as_dict" aria-hidden="true">#</a></h3><p>\u5C06\u5F53\u524D\u5BF9\u8C61\u89E3\u6790\u4E3A Dict \u5BF9\u8C61\uFF0C\u5F00\u53D1\u8005\u53EF\u91CD\u5199\u672C\u65B9\u6CD5\u4EE5\u9002\u914D\u7279\u6B8A\u7684\u89E3\u6790\u65B9\u5F0F\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>Dict[str, Any]</em></p><p>Dict \u5BF9\u8C61\u3002</p></li></ul><h3 id="MessageSegment.copy" tabindex="-1"><em>method</em> <code>copy(self)</code> <a class="header-anchor" href="#MessageSegment.copy" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u81EA\u8EAB\u7684\u6D45\u590D\u5236\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>~T_MessageSegment</em></p><p>\u81EA\u8EAB\u7684\u6D45\u590D\u5236\u3002</p></li></ul><h3 id="MessageSegment.deepcopy" tabindex="-1"><em>method</em> <code>deepcopy(self)</code> <a class="header-anchor" href="#MessageSegment.deepcopy" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u81EA\u8EAB\u7684\u6DF1\u590D\u5236\u3002</p><ul><li><p><strong>Returns</strong></p><p>Type: <em>~T_MessageSegment</em></p><p>\u81EA\u8EAB\u7684\u6DF1\u590D\u5236\u3002</p></li></ul><h3 id="MessageSegment.get" tabindex="-1"><em>method</em> <code>get(self, key, default=None)</code> <a class="header-anchor" href="#MessageSegment.get" aria-hidden="true">#</a></h3><p>D.get(k[,d]) -&lt; D[k] if k in D, else d. d defaults to None.</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>key</strong> (<em>str</em>)</p></li><li><p><strong>default</strong></p></li></ul></li></ul><h3 id="MessageSegment.is_text" tabindex="-1"><em>method</em> <code>is_text(self)</code> <a class="header-anchor" href="#MessageSegment.is_text" aria-hidden="true">#</a></h3><ul><li><p><strong>Returns</strong></p><p>Type: <em>bool</em></p></li></ul><h3 id="MessageSegment.items" tabindex="-1"><em>method</em> <code>items(self)</code> <a class="header-anchor" href="#MessageSegment.items" aria-hidden="true">#</a></h3><p>D.items() -&lt; a set-like object providing a view on D&#39;s items</p><h3 id="MessageSegment.keys" tabindex="-1"><em>method</em> <code>keys(self)</code> <a class="header-anchor" href="#MessageSegment.keys" aria-hidden="true">#</a></h3><p>D.keys() -&lt; a set-like object providing a view on D&#39;s keys</p><h3 id="MessageSegment.values" tabindex="-1"><em>method</em> <code>values(self)</code> <a class="header-anchor" href="#MessageSegment.values" aria-hidden="true">#</a></h3><p>D.values() -&lt; an object providing a view on D&#39;s values</p>',56),d=[l];function n(g,i,r,p,c,m){return t(),s("div",null,d)}var M=e(o,[["render",n]]);export{u as __pageData,M as default};
