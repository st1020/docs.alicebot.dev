import{_ as e,c as t,o as n,a as s}from"./app.bec4a1f1.js";const h=JSON.parse('{"title":"alicebot.adapter.dingtalk.event","description":"","frontmatter":{},"headers":[{"level":2,"title":"class UserInfo(_pydanticself__, **data) {#UserInfo}","slug":"UserInfo"},{"level":2,"title":"class Text(_pydanticself__, **data) {#Text}","slug":"Text"},{"level":2,"title":"class DingTalkEvent(self, **data) {#DingTalkEvent}","slug":"DingTalkEvent"},{"level":3,"title":"async method reply(self, msg, at = None) {#DingTalkEvent.reply}","slug":"DingTalkEvent.reply"},{"level":3,"title":"class method set_ts_now(cls, v, values, **kwargs) {#DingTalkEvent.settsnow}","slug":"DingTalkEvent.set_ts_now"}],"relativePath":"api/adapter/dingtalk/event.md","lastUpdated":null}'),a={name:"api/adapter/dingtalk/event.md"},i=s('<h1 id="alicebot-adapter-dingtalk-event" tabindex="-1">alicebot.adapter.dingtalk.event <a class="header-anchor" href="#alicebot-adapter-dingtalk-event" aria-hidden="true">#</a></h1><p>DingTalk \u9002\u914D\u5668\u4E8B\u4EF6\u3002</p><h2 id="UserInfo" tabindex="-1"><em>class</em> <code>UserInfo</code>(<strong>pydantic_self</strong>, **data) <a class="header-anchor" href="#UserInfo" aria-hidden="true">#</a></h2><p>Bases: <code>pydantic.main.BaseModel</code></p><ul><li><p><strong>Attributes</strong></p><ul><li><p><strong>dingtalkId</strong> (<em>str</em>)</p></li><li><p><strong>staffId</strong> (<em>Union[str, NoneType]</em>)</p></li></ul></li></ul><h2 id="Text" tabindex="-1"><em>class</em> <code>Text</code>(<strong>pydantic_self</strong>, **data) <a class="header-anchor" href="#Text" aria-hidden="true">#</a></h2><p>Bases: <code>pydantic.main.BaseModel</code></p><ul><li><p><strong>Attributes</strong></p><ul><li><strong>content</strong> (<em>str</em>)</li></ul></li></ul><h2 id="DingTalkEvent" tabindex="-1"><em>class</em> <code>DingTalkEvent</code>(self, **data) <a class="header-anchor" href="#DingTalkEvent" aria-hidden="true">#</a></h2><p>Bases: <code>alicebot.event.Event</code></p><p>DingTalk \u4E8B\u4EF6\u57FA\u7C7B</p><ul><li><p><strong>Attributes</strong></p><ul><li><p><strong>type</strong> (<em>Union[str, NoneType]</em>)</p></li><li><p><strong>msgtype</strong> (<em>str</em>)</p></li><li><p><strong>msgId</strong> (<em>str</em>)</p></li><li><p><strong>createAt</strong> (<em>str</em>)</p></li><li><p><strong>conversationType</strong> (<em>Literal[&#39;1&#39;, &#39;2&#39;]</em>)</p></li><li><p><strong>conversationId</strong> (<em>str</em>)</p></li><li><p><strong>conversationTitle</strong> (<em>Union[str, NoneType]</em>)</p></li><li><p><strong>senderId</strong> (<em>str</em>)</p></li><li><p><strong>senderNick</strong> (<em>str</em>)</p></li><li><p><strong>senderCorpId</strong> (<em>Union[str, NoneType]</em>)</p></li><li><p><strong>sessionWebhook</strong> (<em>str</em>)</p></li><li><p><strong>sessionWebhookExpiredTime</strong> (<em>int</em>)</p></li><li><p><strong>isAdmin</strong> (<em>Union[bool, NoneType]</em>)</p></li><li><p><strong>chatbotCorpId</strong> (<em>Union[str, NoneType]</em>)</p></li><li><p><strong>isInAtList</strong> (<em>Union[bool, NoneType]</em>)</p></li><li><p><strong>senderStaffId</strong> (<em>Union[str, NoneType]</em>)</p></li><li><p><strong>chatbotUserId</strong> (<em>str</em>)</p></li><li><p><strong>atUsers</strong> (<em>List[alicebot.adapter.dingtalk.event.UserInfo]</em>)</p></li><li><p><strong>text</strong> (<em>alicebot.adapter.dingtalk.event.Text</em>)</p></li><li><p><strong>message</strong> (<em>Union[alicebot.adapter.dingtalk.message.DingTalkMessage, NoneType]</em>)</p></li><li><p><strong>response_msg</strong> (<em>Union[NoneType, str, Dict, alicebot.adapter.dingtalk.message.DingTalkMessage]</em>)</p></li><li><p><strong>response_at</strong> (<em>Union[NoneType, Dict, alicebot.adapter.dingtalk.message.DingTalkMessage]</em>)</p></li></ul></li></ul><h3 id="DingTalkEvent.reply" tabindex="-1"><em>async method</em> <code>reply(self, msg, at = None)</code> <a class="header-anchor" href="#DingTalkEvent.reply" aria-hidden="true">#</a></h3><p>\u56DE\u590D\u6D88\u606F\u3002</p><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>msg</strong> (<em>Union[str, Dict, alicebot.adapter.dingtalk.message.DingTalkMessage]</em>) - \u56DE\u590D\u6D88\u606F\u7684\u5185\u5BB9\uFF0C\u53EF\u4EE5\u662F str, Dict \u6216 DingTalkMessage\u3002</p></li><li><p><strong>at</strong> (<em>Union[NoneType, Dict, alicebot.adapter.dingtalk.message.DingTalkMessage]</em>) - \u56DE\u590D\u6D88\u606F\u65F6 At \u7684\u5BF9\u8C61\uFF0C\u5FC5\u987B\u65F6 at \u7C7B\u578B\u7684 DingTalkMessage\uFF0C\u6216\u8005\u7B26\u5408\u6807\u51C6\u7684 Dict\u3002</p></li></ul></li><li><p><strong>Returns</strong></p><p>Type: <em>Dict[str, Any]</em></p><p>\u8C03\u7528 Webhook \u5730\u5740\u540E\u9489\u9489\u670D\u52A1\u5668\u7684\u54CD\u5E94\u3002</p></li><li><p><strong>Raises</strong></p><ul><li><p><strong>WebhookExpiredError</strong> - \u5F53\u524D\u4E8B\u4EF6\u7684 Webhook \u5730\u5740\u5DF2\u7ECF\u8FC7\u671F\u3002</p></li><li><p><strong>...</strong> - \u540C <code>DingTalkAdapter.send()</code> \u65B9\u6CD5\u3002</p></li></ul></li></ul><h3 id="DingTalkEvent.set_ts_now" tabindex="-1"><em>class method</em> <code>set_ts_now(cls, v, values, **kwargs)</code> <a class="header-anchor" href="#DingTalkEvent.set_ts_now" aria-hidden="true">#</a></h3><ul><li><p><strong>Arguments</strong></p><ul><li><p><strong>v</strong></p></li><li><p><strong>values</strong></p></li></ul></li></ul>',17),l=[i];function o(r,p,g,d,m,c){return n(),t("div",null,l)}var k=e(a,[["render",o]]);export{h as __pageData,k as default};
